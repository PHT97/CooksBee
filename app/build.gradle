plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'com.google.gms.google-services'
    id 'de.undercouch.download'
}

android {
    compileSdk 31

    defaultConfig {
        applicationId "com.example.capstone"
        minSdk 26
        targetSdk 31
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    flavorDimensions "tfliteInference"
    productFlavors {
        // The TFLite inference is built using the TFLite Java interpreter.
        interpreter {
            dimension "tfliteInference"
        }
        // Default: The TFLite inference is built using the TFLite Task library (high-level API).
        taskApi {
            getIsDefault().set(true)
            dimension "tfliteInference"
        }
    }
    androidResources {
        noCompress 'tflite'
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
    }
    buildFeatures { viewBinding true }
}

// import DownloadModels task
project.ext.ASSET_DIR = projectDir.toString() + '/src/main/assets'
project.ext.TMP_DIR   = project.buildDir.toString() + '/downloads'

// Download default models; if you wish to use your own models then
// place them in the "assets" directory and comment out this line.
apply from:'download_model.gradle'

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar','*.aar'])
    interpreterImplementation project(":lib_interpreter")
    taskApiImplementation project(":lib_task_api")
    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.5.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    implementation 'com.github.bumptech.glide:glide:4.9.0'
    implementation files('libs/google-api-client-1.32.1.jar')
    implementation files('libs/google-api-client-android-1.32.1.jar')
    implementation files('libs/httpclient-4.5.13.jar')
    implementation files('libs/httpcore-4.4.13.jar')
    implementation files('libs/YouTubeAndroidPlayerApi.jar')
    annotationProcessor 'com.github.bumptech.glide:compiler:4.9.0'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    implementation 'com.google.firebase:firebase-firestore:21.4.0'
    implementation files('libs/httpclient-4.5.13.jar')
    implementation files('libs/httpcore-4.4.13.jar')
    implementation files('libs\\google-api-client-android-1.32.1.jar')
    implementation files('libs\\google-api-client-1.32.1.jar')
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.9")
    // Import the Task Vision Library dependency (NNAPI is included)
    implementation 'org.tensorflow:tensorflow-lite-task-vision:0.3.0'
    // Import the GPU delegate plugin Library for GPU inference
    implementation 'org.tensorflow:tensorflow-lite-gpu-delegate-plugin:0.3.0'
}